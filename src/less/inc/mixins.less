// ¸,ø¤º°`°º¤ø,¸¸,ø¤º° JUST FOR DEBUGGING
.out(@color:red){outline:1px solid @color;}

// (¯`·.¸¸.·´¯`·.¸¸.-> MIXINS <-.¸¸.·´¯`·.¸¸.·´¯)
.escondetxt(){
  text-indent: -9999px;
  overflow: hidden;
}
.zero(){
  margin: 0;
  padding: 0;
}
.box-shadow(@arguments){
  -webkit-box-shadow: @arguments;
  -moz-box-shadow:    @arguments;
  box-shadow:         @arguments;
  behavior: url(pie/PIE.htc);
}
.gradient-vertical(@startColor: #1e5799, @endColor: #7db9e8){
  background: @endColor;
  background: -moz-linear-gradient(top,  @startColor 0%, @endColor 100%);
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,@startColor), color-stop(100%,@endColor));
  background: -webkit-linear-gradient(top,  @startColor 0%,@endColor 100%);
  background: -o-linear-gradient(top,  @startColor 0%,@endColor 100%);
  background: -ms-linear-gradient(top,  @startColor 0%,@endColor 100%);
  background: linear-gradient(to bottom,  @startColor 0%,@endColor 100%);
  filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",@endColor,@startColor));
  behavior: url(pie/PIE.htc);
}
.background-size(@arguments){
  -webkit-background-size: @arguments;
  -moz-background-size: @arguments;
  -o-background-size: @arguments;
  -ms-background-size: @arguments;
  background-size: @arguments;
}
.border-radius(@radius){
  -webkit-border-radius:    @radius;
  -moz-border-radius:       @radius;
  -o-border-radius:         @radius;
  -ms-border-radius:        @radius;
  border-radius:            @radius;
  behavior: url(pie/PIE.htc);
}
.opacity(@opacity: 0.5) {
  -moz-opacity: @opacity;
  -khtml-opacity: @opacity;
  -webkit-opacity: @opacity;
  opacity: @opacity;
  @opperc: @opacity * 100;
  -ms-filter: ~"progid:DXImageTransform.Microsoft.Alpha(opacity=@{opperc})";
  filter: ~"alpha(opacity=@{opperc})";
}
.transform-origin(@arguments) {
  -webkit-transform-origin: @arguments;
  -moz-transform-origin: @arguments;
  -o-transform-origin: @arguments;
  -ms-transform-origin: @arguments;
  transform-origin: @arguments;
}
.transform(@arguments) {
  -webkit-transform: @arguments;
  -moz-transform: @arguments;
  -o-transform: @arguments;
  -ms-transform: @arguments;
  transform: @arguments;
}
.transition(@arguments) {
  -webkit-transition: @arguments;
  -moz-transition: @arguments;
  -o-transition: @arguments;
  -ms-transition: @arguments;
  transition: @arguments;
}
.transition-delay(@arguments) {
  -webkit-transition-delay: @arguments;
  -ms-transition-delay: @arguments;
  -o-transition-delay: @arguments;
  -ms-transition-delay: @arguments;
  transition-delay: @arguments;
}
.animation-delay(@arguments) {
  -webkit-animation-delay: @arguments;
  -ms-animation-delay: @arguments;
  -o-animation-delay: @arguments;
  -ms-animation-delay: @arguments;
  animation-delay: @arguments;
}
.animation(@arguments) {
  -webkit-animation: @arguments;
  -ms-animation: @arguments;
  -o-animation: @arguments;
  -ms-animation: @arguments;
  animation: @arguments;
}
.perspective(@arguments) {
  -webkit-perspective: @arguments;
  -moz-perspective: @arguments;
  -o-perspective: @arguments;
  -ms-perspective: @arguments;
  perspective: @arguments;
}
.columns(@arguments){
  -webkit-column-count: @arguments;
  -moz-column-count: @arguments;
  -o-column-count: @arguments;
  -ms-column-count: @arguments;
  column-count: @arguments;
}